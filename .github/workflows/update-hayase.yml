name: Update Miru

on:
  schedule:
    - cron: "0 2 * * 1" # Every Monday at 2 AM UTC
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Setup Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Check for updates
        id: update
        run: |
          # Get latest version
          LATEST=$(curl -s https://api.github.com/repos/ThaUnknown/miru/releases/latest | jq -r .tag_name)
          LATEST_VERSION=${LATEST#v}

          # Get current version
          CURRENT=$(grep -oP 'version = "\K[^"]+' package.nix)

          echo "current_version=$CURRENT" >> $GITHUB_OUTPUT
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT

          if [ "$CURRENT" != "$LATEST_VERSION" ]; then
            echo "update_needed=true" >> $GITHUB_OUTPUT
          else
            echo "update_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: Update package
        if: steps.update.outputs.update_needed == 'true'
        run: |
          # Run update script
          chmod +x update.sh
          ./update.sh

          # Try to build and get pnpm hash
          echo "Attempting to build to get pnpm hash..."
          if ! nix build 2>&1 | tee build.log; then
            # Extract the expected hash from build failure
            if grep -q "got:" build.log; then
              NEW_PNPM_HASH=$(grep "got:" build.log | tail -1 | sed 's/.*got: //')
              echo "Found pnpm hash: $NEW_PNPM_HASH"
              # Update the hash in package.nix
              sed -i "s/hash = \"sha256-.*\"/hash = \"$NEW_PNPM_HASH\"/" package.nix
            fi
          fi

      - name: Test build
        if: steps.update.outputs.update_needed == 'true'
        run: |
          nix build .#miru
          echo "Build successful!"

      - name: Create Pull Request
        if: steps.update.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "miru: ${{ steps.update.outputs.current_version }} -> ${{ steps.update.outputs.latest_version }}"
          title: "miru: ${{ steps.update.outputs.current_version }} -> ${{ steps.update.outputs.latest_version }}"
          body: |
            Automated update of Miru from ${{ steps.update.outputs.current_version }} to ${{ steps.update.outputs.latest_version }}

            This PR was automatically created by the update workflow.

            - [x] Version updated
            - [x] Hash updated
            - [x] Build tested

            **Changelog:** https://github.com/ThaUnknown/miru/releases/tag/v${{ steps.update.outputs.latest_version }}
          branch: update-miru-${{ steps.update.outputs.latest_version }}
          delete-branch: true
          labels: |
            automated
            dependencies
