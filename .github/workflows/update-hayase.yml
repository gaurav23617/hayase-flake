name: Update Hayase

on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * 0" # every Sunday at 1 AM UTC

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Install dependencies
        run: |
          nix profile install nixpkgs#jq nixpkgs#curl nixpkgs#nix-prefetch

      - name: Fetch latest version + SHA
        id: version-check
        run: |
          # Get current version
          CURRENT_VERSION=$(jq -r '.version' version.json)
          echo "Current version: $CURRENT_VERSION"

          # Get latest version from GitHub API
          LATEST=$(curl -s https://api.github.com/repos/ClearVision/Miru/tags | jq -r '.[0].name')
          if [ -z "$LATEST" ] || [ "$LATEST" = "null" ]; then
            echo "Failed to fetch latest version"
            exit 1
          fi

          VERSION="${LATEST#v}"
          echo "Latest version: $VERSION"

          # Check if update is needed
          if [ "$CURRENT_VERSION" = "$VERSION" ]; then
            echo "Already up to date"
            echo "update_needed=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Fetch SHA256
          URL="https://github.com/ClearVision/Miru/archive/refs/tags/v$VERSION.tar.gz"
          SHA=$(nix-prefetch-url --unpack "$URL")

          if [ -z "$SHA" ]; then
            echo "Failed to fetch SHA256"
            exit 1
          fi

          echo "SHA256: $SHA"

          # Update version.json
          jq -n --arg version "$VERSION" --arg sha256 "$SHA" \
            '{version: $version, sha256: $sha256}' > version.json

          echo "update_needed=true" >> $GITHUB_OUTPUT
          echo "new_version=$VERSION" >> $GITHUB_OUTPUT

      - name: Validate version file
        if: steps.version-check.outputs.update_needed == 'true'
        run: |
          chmod +x scripts/validate-version.sh
          ./scripts/validate-version.sh --all

      - name: Create Pull Request
        if: steps.version-check.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: bump hayase to v${{ steps.version-check.outputs.new_version }}"
          title: "chore: Update hayase to v${{ steps.version-check.outputs.new_version }}"
          body: |
            Automated update triggered by GitHub Actions

            - Previous version: `$(jq -r '.version' version.json)`
            - New version: `${{ steps.version-check.outputs.new_version }}`

            Changes:
            - Updated version.json with new version and SHA256
            - Build tested successfully
          branch: update-hayase-${{ steps.version-check.outputs.new_version }}
          delete-branch: true
          labels: |
            automated
            dependencies
